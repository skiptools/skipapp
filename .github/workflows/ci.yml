name: Skip App CI

env:
  #DEVELOPER_DIR: /Applications/Xcode_15.0.app/Contents/Developer
  DEVELOPER_DIR: /Applications/Xcode_14.3.app/Contents/Developer

on:
  push: 
    #branches: [ main ]
    branches: '*'
    tags: "[0-9]+.[0-9]+.[0-9]+"

  #schedule:
    #- cron:  '0 1,7,13,23 * * *'

permissions:
  contents: write

jobs:
  skipapp:
    runs-on: macos-13
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build ipa
        run: ./skip.sh --debug --release --version $(git describe --tags --abbrev=0 --match '[0-9]*\.[0-9]*\.[0-9]*' --first-parent) assemble-ipa

      - name: Build apk
        run: ./skip.sh --debug --release --version $(git describe --tags --abbrev=0 --match '[0-9]*\.[0-9]*\.[0-9]*' --first-parent) assemble-apk

      - name: Assemble Kotlin Source Release
        if: false
        run: |
          COMMITDATE="$(git log -1 --format=%ad --date=iso-strict ${GITHUB_REF#refs/tags/})"
          ARTIFACTNAME="App-Android-Source.zip"

          tree -I build -l ~/Library/Developer/Xcode/DerivedData/*/SourcePackages/plugins/
          tree -I build -l .build/plugins/outputs/

          cd .build/plugins/outputs/skipapp/AppUIKt/skip-transpiler/
          # the zip exclude pattern does not seem to exclude these as advertised, so we delete them
          rm -rf .gradle .build */.build
          # create the zip file with predictable timestamps for reproducible content
          find . -exec touch -d "${COMMITDATE:0:19}" {} \;
          zip -r ../../../../../skip-artifacts/"${ARTIFACTNAME}" . -x ".build" -x "*/.gradle" -x "*/.build" -x "*/build"
          cd ../../../../../skip-artifacts/

          unzip -t "${ARTIFACTNAME}"
          ls -lah "${ARTIFACTNAME}"
          shasum -a 256 "${ARTIFACTNAME}" | tee "${ARTIFACTNAME}.sha256"
          cat "${ARTIFACTNAME}.sha256" >> checksums.txt

      - name: "Create Release"
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          echo "Creating release: ${TAG}"
          cd Packages/Skip/

          # clear vestigial AppUI-debug.apk
          rm -f *UI-*.*

          # verify all the artifact checksums
          shasum -a 256 *.* > checksums.txt

          cat > relnotes.md << EOF
          These are the checksums for the release artifacts:
          EOF

          echo '```' >> relnotes.md
          cat checksums.txt >> relnotes.md
          echo '```' >> relnotes.md

          gh release create "${TAG}" --prerelease --title "Release ${TAG}" -F relnotes.md
          rm relnotes.md
          gh release upload "${TAG}" -- *.*

      - name: "Upload Build Artifacts"
        # upload the artifacts generated from each build
        uses: actions/upload-artifact@v3
        if: always()
        with: 
          path: Packages/Skip/

