name: Skip App CI

env:
  #DEVELOPER_DIR: /Applications/Xcode_15.0.app/Contents/Developer
  DEVELOPER_DIR: /Applications/Xcode_14.3.app/Contents/Developer

on:
  push: 
    #branches: [ main ]
    branches: '*'
    tags: "[0-9]+.[0-9]+.[0-9]+"

  #schedule:
    #- cron:  '0 1,7,13,23 * * *'

permissions:
  contents: write

jobs:
  skipapp:
    runs-on: macos-13
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set COMMIT_DATE
        run: echo "COMMIT_DATE=$(git log -1 --format=%ad --date=iso-strict ${GITHUB_REF#refs/tags/})" > $GITHUB_ENV

      - name: Assemble Source Release
        run: |
          # create the source zip file with predictable timestamps for reproducibility
          find . -exec touch -d "${COMMIT_DATE:0:19}" {} \;
          mkdir -p Packages/Skip/artifacts/
          zip -r Packages/Skip/artifacts/App-Source.zip . -x "Packages/*" -x ".git/*" -x ".build/*"

      - name: Set MARKETING_VERSION
        run: echo "MARKETING_VERSION = $(git describe --tags --abbrev=0 --match '[0-9]*\.[0-9]*\.[0-9]*' --first-parent)" >> App.xcconfig

      - name: Set PRODUCT_VERSION
        run: echo "PRODUCT_VERSION = $(git rev-list --count HEAD)" >> App.xcconfig

      - name: Run Tests
        run: swift test || swift test || swift test

      - name: Build ipa
        run: SKIPTRIM=1 ./skip.sh assemble-ipa

      - name: Build apk
        run: ./skip.sh assemble-apk || ./skip.sh assemble-apk || ./skip.sh assemble-apk || ./skip.sh assemble-apk || ./skip.sh assemble-apk || ./skip.sh assemble-apk

      - name: Assemble Kotlin Source Release
        run: |
          cd ~/Library/Developer/Xcode/DerivedData/*/SourcePackages/plugins/skipapp.output/AppUIKt/skip-transpiler/
          rm -rf .gradle .build */.build
          # create the zip file with predictable timestamps for reproducibility
          find . -exec touch -d "${COMMIT_DATE:0:19}" {} \;
          zip -r ${OLDPWD}/Packages/Skip/artifacts/App-Source-Android.zip . -x ".build" -x "*/.gradle" -x "*/.build" -x "*/build"

      - name: "Calculate Checksums"
        run: |
          cd Packages/Skip/artifacts/
          # clear vestigial AppUI-debug.apk
          rm -f *UI-*.*
          shasum -a 256 *.* > checksums.txt
          cat checksums.txt

      - name: "Create Release"
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          echo "Creating release: ${TAG}"
          cd Packages/Skip/artifacts/

          cat > relnotes.md << EOF
          These are the checksums for the release artifacts:
          EOF

          echo '```' >> relnotes.md
          cat checksums.txt >> relnotes.md
          echo '```' >> relnotes.md

          gh release create "${TAG}" --title "Release ${TAG}" -F relnotes.md
          rm relnotes.md
          gh release upload "${TAG}" -- *.*

      - name: "Upload Build Artifacts"
        # upload the artifacts generated from each build
        uses: actions/upload-artifact@v3
        if: always()
        with: 
          path: Packages/Skip/artifacts/

